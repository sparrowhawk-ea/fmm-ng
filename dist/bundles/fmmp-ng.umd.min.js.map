{"version":3,"sources":["../../src/lib/fmm-ng.module.ts"],"names":["FmmNgMinimap","hostRef","this","verbosity","update","EventEmitter","form","nativeElement","tagName","parentElement","prototype","ngOnChanges","minimap","key","previousKey","destructor","ngOnInit","store","namelessControls","compose","customWidgetIds","ngOnDestroy","detach","undefined","_this","p","aggregateLabels","anchor","debounceMsec","dynamicLabels","framework","onUpdate","snapshot","next","page","Store","formGroup","title","usePanelDetail","useWidthToScale","widgetFactories","panel","G","PANELMAP","get","createMinimap","takeSnapshot","_a","Component","args","selector","template","ElementRef","Input","Output","FmmNgPanel","ef","ElementFactory","minimapPanel","delete","host","vertical","Fmm","createPanel","detailParent","set","destroyDetached","NgModule","declarations","exports","ref","ngContentAttribute","Element","getAttributeNames","find","a","startsWith","Array","map","call","attributes","name","Error","createElement","e","document","setAttribute","createElementNS","namespaceURI","qualifiedName","WeakMap","StoreItem","listener","control","se","subscription","Subscription","add","statusChanges","subscribe","valueChanges","unsubscribe","getError","hasValue","errors","keys","Object","length","filter","k","join","getName","getValue","value","multiple","selectedIndex","indexes","from","options","forEach","o","i","selected","push","isDisabled","disabled","minimaps","Set","m","createStoreItem","_","getAttribute","id","path","inFormArray","fc","dataset","formcontrolname","fmminformarray","pName","ac","notifyMinimap","on"],"mappings":"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","sourcesContent":["import { Component, ElementRef, EventEmitter, Input, NgModule, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport {\n\tFmm,\n\tFmmElementFactory,\n\tFmmFramework,\n\tFmmMapString,\n\tFmmMinimap,\n\tFmmMinimapCreateParam,\n\tFmmMinimapSnapshot,\n\tFmmPanel,\n\tFmmStore,\n\tFmmStoreItem,\n\tFmmWidgetFactory\n} from '@fmmp/core';\n\n// =================================================================================================================================\n//\t\t\t\t\t\tF M M N G M I N I M A P\n// =================================================================================================================================\n@Component({ selector: 'fmm-ng-minimap', template: '' })\nexport class FmmNgMinimap implements OnChanges, OnDestroy, OnInit, Partial<FmmMinimap> {\n\t@Input() private aggregateLabels?: FmmMapString;\n\t@Input() private anchor: HTMLElement;\n\t@Input() private customWidgetIds: string[];\n\t@Input() private debounceMsec: number;\n\t@Input() private dynamicLabels?: string[];\n\t@Input() private formGroup: FormGroup;\n\t@Input() private framework: FmmFramework;\n\t@Input() private key: string;\n\t@Input() private namelessControls: FmmNgNamelessControls;\n\t@Input() private page: HTMLElement;\n\t@Input() private panel: FmmNgPanel;\n\t@Input() private title: string;\n\t@Input() private usePanelDetail: boolean;\n\t@Input() private useWidthToScale: boolean;\n\t@Input() private verbosity = 0;\n\t@Input() private widgetFactories?: FmmWidgetFactory[];\n\t@Output() private readonly update = new EventEmitter<FmmMinimapSnapshot>();\n\tprivate readonly form: HTMLFormElement;\n\n\tprivate minimap: FmmMinimap;\n\tprivate previousKey: string;\n\tprivate store: Store;\n\n\t// =============================================================================================================================\n\tpublic constructor(hostRef: ElementRef) {\n\t\tlet form = hostRef.nativeElement as Element;\n\t\twhile (form && form.tagName !== 'FORM') form = form.parentElement;\n\t\tthis.form = form as HTMLFormElement;\n\t}\n\n\t// =============================================================================================================================\n\tpublic ngOnChanges(): void {\n\t\tif (!this.minimap) return;\n\t\tif (this.key !== this.previousKey) {\n\t\t\tthis.minimap.destructor();\n\t\t\tthis.ngOnInit();\n\t\t} else {\n\t\t\tthis.store.namelessControls = this.namelessControls;\n\t\t\tthis.minimap.compose(this.customWidgetIds);\t\n\t\t}\n\t}\n\n\t// =============================================================================================================================\n\tpublic ngOnDestroy(): void {\n\t\tif (!this.minimap) return;\n\t\tthis.minimap.detach();\n\t\tthis.store = undefined;\n\t}\n\n\t// =============================================================================================================================\n\tpublic ngOnInit(): void {\n\t\tconst p: FmmMinimapCreateParam = {\n\t\t\taggregateLabels: this.aggregateLabels,\n\t\t\tanchor: this.anchor,\n\t\t\tdebounceMsec: this.debounceMsec,\n\t\t\tdynamicLabels: this.dynamicLabels,\n\t\t\tform: this.form,\n\t\t\tframework: this.framework,\n\t\t\tonUpdate: (snapshot: FmmMinimapSnapshot) => this.update.next(snapshot),\n\t\t\tpage: this.page,\n\t\t\tstore: this.store = new Store(this.formGroup),\n\t\t\ttitle: this.title,\n\t\t\tusePanelDetail: this.usePanelDetail !== undefined,\n\t\t\tuseWidthToScale: this.useWidthToScale !== undefined,\n\t\t\tverbosity: this.verbosity,\n\t\t\twidgetFactories: this.widgetFactories\n\t\t};\n\t\tconst panel = this.panel ? G.PANELMAP.get(this.panel) : undefined;\n\t\tthis.minimap = panel?.createMinimap(p);\n\t\tthis.previousKey = this.key;\n\t\tthis.ngOnChanges();\n\t}\n\n\t// =============================================================================================================================\n\tpublic takeSnapshot(): boolean {\n\t\treturn this.minimap?.takeSnapshot();\n\t}\n}\n\n// =================================================================================================================================\n//\t\t\t\t\t\tF M M N G P A N E L\n// =================================================================================================================================\n@Component({ selector: 'fmm-ng-panel', template: '' })\nexport class FmmNgPanel implements OnDestroy, OnInit, Partial<FmmPanel> {\n\t@Input() private readonly detailParent: HTMLElement;\n\t@Input() private readonly vertical: boolean;\n\n\tpublic readonly ef: FmmElementFactory;\n\tprivate minimapPanel: FmmPanel;\n\n\t// =============================================================================================================================\n\tpublic constructor(private readonly hostRef: ElementRef) {\n\t\tthis.ef = new ElementFactory(hostRef);\n\t}\n\n\t// =============================================================================================================================\n\tpublic ngOnDestroy(): void {\n\t\tthis.minimapPanel.destructor();\n\t\tG.PANELMAP.delete(this);\n\t\tthis.minimapPanel = undefined;\n\t}\n\n\t// =============================================================================================================================\n\tpublic ngOnInit(): void {\n\t\tconst host = this.hostRef.nativeElement as HTMLElement;\n\t\tconst vertical = this.vertical !== undefined;\n\t\tthis.minimapPanel = Fmm.createPanel(this.ef, host, this.detailParent, vertical);\n\t\tG.PANELMAP.set(this, this.minimapPanel);\n\t}\n\n\t// =============================================================================================================================\n\tpublic destroyDetached(): void {\n\t\treturn this.minimapPanel?.destroyDetached();\n\t}\n}\n\n// =================================================================================================================================\n//\t\t\t\t\t\tF M M N G M O D U L E\n// =================================================================================================================================\n@NgModule({ declarations: [FmmNgMinimap, FmmNgPanel], exports: [FmmNgMinimap, FmmNgPanel] })\nexport class FmmNgModule {}\n\n// =================================================================================================================================\n//\t\t\t\t\t\tF M M N G N A M E L E S S C O N T R O L S\n// =================================================================================================================================\nexport type FmmNgNamelessControls = Record<string, AbstractControl>;\n\n// =================================================================================================================================\n// =================================================================================================================================\n// =================================================\tP R I V A T E\t============================================================\n// =================================================================================================================================\n// =================================================================================================================================\n\n// =================================================================================================================================\n//\t\t\t\t\t\tE L E M E N T F A C T O R Y\n// =================================================================================================================================\nclass ElementFactory implements FmmElementFactory {\n\tprivate readonly ngContentAttribute: string;\n\n\t// =============================================================================================================================\n\tpublic constructor(ref: ElementRef) {\n\t\tlet ngContentAttribute: string; // set attribute on elements to use non-global CSS\n\t\tif (Element.prototype.getAttributeNames !== undefined) {\n\t\t\tfor (let p = ref.nativeElement as Element; p && !ngContentAttribute; p = p.parentElement) {\n\t\t\t\tconst names = p.getAttributeNames();\n\t\t\t\tngContentAttribute = names.find((a: string) => a.startsWith('_ngcontent-'));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let p = ref.nativeElement as Element; p && !ngContentAttribute; p = p.parentElement) {\n\t\t\t\tconst names = Array.prototype.map.call(p.attributes, (a: Attr) => a.name) as string[];\n\t\t\t\tngContentAttribute = names.find((a: string) => a.startsWith('_ngcontent-'));\n\t\t\t}\n\t\t}\n\t\tif (!ngContentAttribute) throw new Error('FormMinimap: missing _ngcontent- attribute');\n\t\tthis.ngContentAttribute = ngContentAttribute;\n\t}\n\n\t// =============================================================================================================================\n\tpublic createElement(tagName: string) {\n\t\tconst e = document.createElement(tagName);\n\t\te.setAttribute(this.ngContentAttribute, '');\n\t\treturn e;\n\t}\n\n\t// =============================================================================================================================\n\tpublic createElementNS(namespaceURI: string, qualifiedName: string) {\n\t\tconst e = document.createElementNS(namespaceURI, qualifiedName);\n\t\te.setAttribute(this.ngContentAttribute, '');\n\t\treturn e;\n\t}\n}\n\n// =================================================================================================================================\n//\t\t\t\t\t\tG\n// =================================================================================================================================\nconst G: {\n\tPANELMAP: WeakMap<FmmNgPanel, FmmPanel>;\n} = {\n\tPANELMAP: new WeakMap()\n};\n\n// =================================================================================================================================\n//\t\t\t\t\t\tS T O R E I T E M\n// =================================================================================================================================\nclass StoreItem implements FmmStoreItem {\n\tprivate readonly se: HTMLSelectElement;\n\n\t// =============================================================================================================================\n\tpublic constructor(\n\t\te: HTMLElement,\n\t\tlistener: EventListener,\n\t\tprivate readonly name: string,\n\t\tprivate readonly control: AbstractControl\n\t) {\n\t\tthis.se = e.tagName === 'SELECT' ? (e as HTMLSelectElement) : undefined;\n\t\tconst subscription = new Subscription();\n\t\tsubscription.add(this.control.statusChanges.subscribe(listener));\n\t\tsubscription.add(this.control.valueChanges.subscribe(listener));\n\t\tthis.destructor = () => subscription.unsubscribe();\n\t}\n\n\t// =============================================================================================================================\n\tpublic destructor(): void {\n\t\t// function body overwritten in constructor\n\t}\n\n\t// =============================================================================================================================\n\tpublic getError(hasValue: boolean): string {\n\t\tconst errors = this.control.errors;\n\t\tlet keys = errors ? Object.keys(errors) : [];\n\t\tif (hasValue && keys.length) keys = keys.filter(k => k !== 'required'); // IE11 SELECT bug\n\t\treturn keys.length ? keys.join(',') : undefined;\n\t}\n\n\t// =============================================================================================================================\n\tpublic getName(): string {\n\t\treturn this.name;\n\t}\n\n\t// =============================================================================================================================\n\tpublic getValue() {\n\t\tconst value = this.control.value as unknown;\n\t\tif (!value) return undefined;\n\t\tif (!this.se) return value;\n\t\tif (!this.se.multiple) return [this.se.selectedIndex];\n\t\tconst indexes: number[] = []; // FormControl for multiselect doesn't update when selected option is removed dynamically\n\t\tArray.from(this.se.options).forEach((o, i) => o.selected && indexes.push(i));\n\t\treturn indexes;\n\t}\n\n\t// =============================================================================================================================\n\tpublic isDisabled() {\n\t\treturn this.control.disabled;\n\t}\n}\n\n// =================================================================================================================================\n//\t\t\t\t\t\tS T O R E\n// =================================================================================================================================\nclass Store implements FmmStore {\n\tpublic namelessControls: FmmNgNamelessControls = {};\n\tprivate readonly listener: EventListener;\n\tprivate readonly minimaps: Set<FmmMinimap> = new Set();\n\n\t// =============================================================================================================================\n\tpublic constructor(private readonly formGroup: FormGroup) {\n\t\tthis.listener = () => this.minimaps.forEach(m => m.takeSnapshot());\n\t}\n\n\t// =============================================================================================================================\n\tpublic createStoreItem(e: HTMLElement, _: () => FmmStoreItem) {\n\t\tconst name = e.getAttribute('name') || e.id;\n\t\tconst control = name ? this.namelessControls[name] : undefined;\n\t\tif (control) return new StoreItem(e, this.listener, name, control);\n\t\tlet inFormArray = false;\n\t\tlet path: string;\n\t\tlet fc = e;\n\t\tfor (; fc && fc.tagName !== 'FORM'; fc = fc.parentElement) {\n\t\t\tpath = fc.getAttribute('formcontrolname') || fc.dataset.formcontrolname;\n\t\t\tif (path) break;\n\t\t\tinFormArray = fc.dataset.fmminformarray !== undefined;\n\t\t\tif (inFormArray) break;\n\t\t}\n\t\tfor (let p = fc?.parentElement; p && p.tagName !== 'FORM'; p = p.parentElement) {\n\t\t\tlet pName = p.getAttribute('formarrayname');\n\t\t\tif (!pName) {\n\t\t\t\tpName = p.getAttribute('formgroupname');\n\t\t\t\tif (pName) path = pName + '.' + path;\n\t\t\t} else if (!inFormArray) {\n\t\t\t\tpath = pName + '.' + path;\n\t\t\t} else {\n\t\t\t\tinFormArray = false;\n\t\t\t\tpath = pName;\n\t\t\t}\n\t\t}\n\t\tconst ac = this.formGroup.get(path);\n\t\treturn ac ? new StoreItem(e, this.listener, path, ac) : undefined;\n\t}\n\n\t// =============================================================================================================================\n\tpublic notifyMinimap(minimap: FmmMinimap, on: boolean) {\n\t\tif (on) this.minimaps.add(minimap);\n\t\telse this.minimaps.delete(minimap);\n\t}\n}\n"]}